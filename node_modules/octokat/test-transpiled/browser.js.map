{"version":3,"sources":["../test/browser.js"],"names":["fetchVCR","require","configure","fixturePath","headerBlacklist","describe","beforeEach","window","Octokat","Fetch","it","x","Error","done","url","opts","octo","zen","read","catch","mocha","checkLeaks","run"],"mappings":";;AAAA;AACA,IAAMA,WAAWC,QAAQ,WAAR,CAAjB;AACAD,SAASE,SAAT,CAAmB;AACjBC,eAAa,4CADI;AAEjBC,mBAAiB,CAAC,eAAD,EAAkB,YAAlB;AAFA,CAAnB;;AAKAH,QAAQ,OAAR;;AAEAI,SAAS,mBAAT,EAA8B,YAAM;AAClCC,aAAW,YAAM;AACfC,WAAOC,OAAP,CAAeC,KAAf,GAAuBT,QAAvB;AACD,GAFD;;AAIAU,KAAG,wCAAH,EAA6C,YAAM;AACjD,QAAIC,IAAI,IAAIJ,OAAOC,OAAX,EAAR;AACA,QAAI,CAACG,CAAL,EAAQ;AACN,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;AACF,GALD;;AAOAF,KAAG,kCAAH,EAAuC,UAACG,IAAD,EAAU;AAC/CN,WAAOC,OAAP,CAAeC,KAAf,GAAuB,UAACK,GAAD,EAAMC,IAAN,EAAe;AACpCF;AACA;AACA,aAAOb,SAASc,GAAT,EAAcC,IAAd,CAAP;AACD,KAJD;AAKA,QAAMC,OAAO,IAAIR,OAAJ,EAAb;AACAQ,SAAKC,GAAL,CAASC,IAAT,GACCC,KADD,CACON,IADP,EAP+C,CAQlC;AACd,GATD;AAUD,CAtBD;;AAwBAO,MAAMC,UAAN;;AAEAD,MAAME,GAAN","file":"browser.js","sourceRoot":"./index.js","sourcesContent":["/* eslint-env mocha */\nconst fetchVCR = require('fetch-vcr')\nfetchVCR.configure({\n  fixturePath: '../node_modules/octokat-fixtures/_fixtures',\n  headerBlacklist: ['authorization', 'user-agent']\n})\n\nrequire('./all')\n\ndescribe('Root construction', () => {\n  beforeEach(() => {\n    window.Octokat.Fetch = fetchVCR\n  })\n\n  it('can be instantiated via window.Octokat', () => {\n    var x = new window.Octokat()\n    if (!x) {\n      throw new Error('Octokat was not instantiated')\n    }\n  })\n\n  it('supports a custom fetch function', (done) => {\n    window.Octokat.Fetch = (url, opts) => {\n      done()\n      // Continue by using the VCR version of fetch\n      return fetchVCR(url, opts)\n    }\n    const octo = new Octokat()\n    octo.zen.read()\n    .catch(done) // Propagate the error up\n  })\n})\n\nmocha.checkLeaks()\n\nmocha.run()\n"]}