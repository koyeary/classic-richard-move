{"version":3,"sources":["../../src/phil.js"],"names":["fetch","require","chained","Requestor","req","method","path","repos","issues","_path","data","isRaw","isBase64","isBoolean","contentType","acceptHeader","request","then","value","response","additional","console","log","JSON","stringify","headers"],"mappings":";;AAAA,IAAMA,QAAQC,QAAQ,YAAR,CAAd;AACA,IAAMC,UAAUD,QAAQ,WAAR,CAAhB;AACA,IAAME,YAAYF,QAAQ,WAAR,CAAlB;;AAEA,IAAMG,MAAM,IAAID,SAAJ,CAAcH,KAAd,CAAZ;;AAEA,IAAMK,SAAS,KAAf;AACA,IAAMC,OAAO,2BAA2BJ,QAAQ,EAAR,EAAW,EAAX,EAAeK,KAAf,CAAqB,YAArB,EAAmC,YAAnC,EAAiDC,MAAjD,CAAwDC,KAAhG;AACA,IAAMC,OAAO,IAAb;AACA,IAAMC,QAAQ,KAAd;AACA,IAAMC,WAAW,KAAjB;AACA,IAAMC,YAAY,KAAlB;AACA,IAAMC,cAAc,IAApB;AACA,IAAMC,eAAe,IAArB;;AAEAX,IAAIY,OAAJ,CAAYX,MAAZ,EAAoBC,IAApB,EAA0BI,IAA1B,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiDC,SAAjD,EAA4DC,WAA5D,EAAyEC,YAAzE,EACCE,IADD,CACM,gBAA4C;AAAA,MAA1CC,KAA0C,QAA1CA,KAA0C;AAAA,MAAnCF,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BG,QAA0B,QAA1BA,QAA0B;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAChDC,UAAQC,GAAR,CAAY,SAAZ,EAAuBN,OAAvB;AACAK,UAAQC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,UAAQC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;AACAC,UAAQC,GAAR,CAAY,kBAAZ,EAAgCC,KAAKC,SAAL,CAAeL,SAASM,OAAxB,CAAhC;AACD,CAND","file":"phil.js","sourcesContent":["const fetch = require('node-fetch')\nconst chained = require('./chained')\nconst Requestor = require('./request')\n\nconst req = new Requestor(fetch)\n\nconst method = 'GET'\nconst path = 'https://api.github.com' + chained('','').repos('philschatz', 'octokat.js').issues._path\nconst data = null\nconst isRaw = false\nconst isBase64 = false\nconst isBoolean = false\nconst contentType = null\nconst acceptHeader = null\n\nreq.request(method, path, data, isRaw, isBase64, isBoolean, contentType, acceptHeader)\n.then(({value, request, response, additional}) => {\n  console.log('REQUEST', request)\n  console.log('RESPONSE', response)\n  console.log('ADDITIONAL', additional)\n  console.log('RESPONSE_HEADERS', JSON.stringify(response.headers));\n})\n"]}